State 45 conflicts: 17 shift/reduce
State 63 conflicts: 1 shift/reduce
State 126 conflicts: 3 shift/reduce


Grammar

    0 $accept: starting $end

    1 starting: dec_list EOF

    2 dec_list: declaration
    3         | declaration dec_list

    4 declaration: ID opt_type IS expr SEMICOLON

    5 opt_type: /* empty */
    6         | COLON type

    7 type: INTEGER
    8     | COMPLEX
    9     | RATIONAL
   10     | REAL
   11     | STRING
   12     | BOOLEAN
   13     | func_type
   14     | tuple_type
   15     | array_type
   16     | map_type

   17 expr: secondary
   18     | secondary LESS expr
   19     | secondary LESSEQUAL expr
   20     | secondary GREATER expr
   21     | secondary GREATEREQUAL expr
   22     | secondary EQUAL expr
   23     | secondary NOTEQUAL expr
   24     | secondary AND expr
   25     | secondary OR expr
   26     | secondary XOR expr
   27     | secondary PLUS expr
   28     | secondary MINUS expr
   29     | secondary STAR expr
   30     | secondary SLASH expr
   31     | MINUS secondary NEG
   32     | secondary ELLIPSIS secondary

   33 secondary: primary
   34          | func_call
   35          | secondary indexer

   36 primary: value
   37        | cond
   38        | func_def
   39        | array_def
   40        | map_def
   41        | tuple_def
   42        | LROUND expr RROUND

   43 value: BOOLEAN_VALUE
   44      | INTEGER_VALUE
   45      | REAL_VALUE
   46      | RATIONAL_VALUE
   47      | COMPLEX_VALUE
   48      | STRING_VALUE
   49      | ID

   50 cond: IF expr THEN expr ELSE expr END

   51 func_def: FUNC LROUND opt_params RROUND opt_type func_body

   52 opt_params: /* empty */
   53           | param_list

   54 param_list: param
   55           | param_list COMMA param

   56 param: ID COLON type

   57 func_body: DO stm_list END
   58          | ARROW expr

   59 stm_list: statement
   60         | stm_list statement

   61 statement: func_call SEMICOLON
   62          | assignment
   63          | declaration
   64          | if_stm
   65          | loop_stm
   66          | return_stm
   67          | break_stm
   68          | cont_stm
   69          | print_stm

   70 func_call: secondary LROUND opt_exprs RROUND

   71 opt_exprs: /* empty */
   72          | expr_list

   73 expr_list: expr
   74          | expr_list COMMA expr

   75 assignment: secondary ASSIGN expr SEMICOLON

   76 if_stm: IF expr THEN stm_list END
   77       | IF expr THEN stm_list ELSE stm_list END

   78 loop_stm: loop_header LOOP stm_list END

   79 loop_header: /* empty */
   80            | FOR ID IN expr
   81            | FOR expr
   82            | WHILE expr

   83 return_stm: RETURN SEMICOLON
   84           | RETURN expr SEMICOLON

   85 break_stm: BREAK SEMICOLON

   86 cont_stm: CONTINUE SEMICOLON

   87 print_stm: PRINT LROUND opt_exprs RROUND SEMICOLON

   88 array_def: LSQUARE opt_exprs RSQUARE

   89 map_def: LCURLY pair_list RCURLY

   90 pair_list: /* empty */
   91          | pair
   92          | pair_list COMMA pair

   93 pair: expr COLON expr

   94 tuple_def: LROUND tuple_elist RROUND

   95 tuple_elist: tuple_elem
   96            | tuple_elist COMMA tuple_elem

   97 tuple_elem: ID IS expr
   98           | expr

   99 indexer: LSQUARE expr RSQUARE
  100        | DOT ID
  101        | DOT INTEGER_VALUE

  102 func_type: FUNC LROUND type_list RROUND COLON type

  103 type_list: type
  104          | type_list COMMA type

  105 array_type: LSQUARE type RSQUARE

  106 tuple_type: LROUND type_list RROUND

  107 map_type: LCURLY type COLON type RCURLY


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 4 49 56 80 97 100
BOOLEAN_VALUE (259) 43
INTEGER_VALUE (260) 44 101
REAL_VALUE (261) 45
RATIONAL_VALUE (262) 46
COMPLEX_VALUE (263) 47
STRING_VALUE (264) 48
DOT (265) 100 101
COMMA (266) 55 74 92 96 104
COLON (267) 6 56 93 102 107
SEMICOLON (268) 4 61 75 83 84 85 86 87
STAR (269) 29
SLASH (270) 30
PLUS (271) 27
MINUS (272) 28 31
INTEGER (273) 7
COMPLEX (274) 8
RATIONAL (275) 9
REAL (276) 10
STRING (277) 11
BOOLEAN (278) 12
ASSIGN (279) 75
ARROW (280) 58
LESS (281) 18
LESSEQUAL (282) 19
GREATER (283) 20
GREATEREQUAL (284) 21
EQUAL (285) 22
NOTEQUAL (286) 23
AND (287) 24
OR (288) 25
XOR (289) 26
FUNC (290) 51 102
DO (291) 57
RETURN (292) 83 84
PRINT (293) 87
IS (294) 4 97
IF (295) 50 76 77
THEN (296) 50 76 77
ELSE (297) 50 77
END (298) 50 57 76 77 78
WHILE (299) 82
FOR (300) 80 81
IN (301) 80
LOOP (302) 78
BREAK (303) 85
CONTINUE (304) 86
LROUND (305) 42 51 70 87 94 102 106
RROUND (306) 42 51 70 87 94 102 106
LSQUARE (307) 88 99 105
RSQUARE (308) 88 99 105
LCURLY (309) 89 107
RCURLY (310) 89 107
ELLIPSIS (311) 32
EOF (312) 1
NEG (313) 31


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
starting (60)
    on left: 1, on right: 0
dec_list (61)
    on left: 2 3, on right: 1 3
declaration (62)
    on left: 4, on right: 2 3 63
opt_type (63)
    on left: 5 6, on right: 4 51
type (64)
    on left: 7 8 9 10 11 12 13 14 15 16, on right: 6 56 102 103 104
    105 107
expr (65)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32,
    on right: 4 18 19 20 21 22 23 24 25 26 27 28 29 30 42 50 58 73
    74 75 76 77 80 81 82 84 93 97 98 99
secondary (66)
    on left: 33 34 35, on right: 17 18 19 20 21 22 23 24 25 26 27 28
    29 30 31 32 35 70 75
primary (67)
    on left: 36 37 38 39 40 41 42, on right: 33
value (68)
    on left: 43 44 45 46 47 48 49, on right: 36
cond (69)
    on left: 50, on right: 37
func_def (70)
    on left: 51, on right: 38
opt_params (71)
    on left: 52 53, on right: 51
param_list (72)
    on left: 54 55, on right: 53 55
param (73)
    on left: 56, on right: 54 55
func_body (74)
    on left: 57 58, on right: 51
stm_list (75)
    on left: 59 60, on right: 57 60 76 77 78
statement (76)
    on left: 61 62 63 64 65 66 67 68 69, on right: 59 60
func_call (77)
    on left: 70, on right: 34 61
opt_exprs (78)
    on left: 71 72, on right: 70 87 88
expr_list (79)
    on left: 73 74, on right: 72 74
assignment (80)
    on left: 75, on right: 62
if_stm (81)
    on left: 76 77, on right: 64
loop_stm (82)
    on left: 78, on right: 65
loop_header (83)
    on left: 79 80 81 82, on right: 78
return_stm (84)
    on left: 83 84, on right: 66
break_stm (85)
    on left: 85, on right: 67
cont_stm (86)
    on left: 86, on right: 68
print_stm (87)
    on left: 87, on right: 69
array_def (88)
    on left: 88, on right: 39
map_def (89)
    on left: 89, on right: 40
pair_list (90)
    on left: 90 91 92, on right: 89 92
pair (91)
    on left: 93, on right: 91 92
tuple_def (92)
    on left: 94, on right: 41
tuple_elist (93)
    on left: 95 96, on right: 94 96
tuple_elem (94)
    on left: 97 98, on right: 95 96
indexer (95)
    on left: 99 100 101, on right: 35
func_type (96)
    on left: 102, on right: 13
type_list (97)
    on left: 103 104, on right: 102 104 106
array_type (98)
    on left: 105, on right: 15
tuple_type (99)
    on left: 106, on right: 14
map_type (100)
    on left: 107, on right: 16


state 0

    0 $accept: . starting $end

    ID  shift, and go to state 1

    starting     go to state 2
    dec_list     go to state 3
    declaration  go to state 4


state 1

    4 declaration: ID . opt_type IS expr SEMICOLON

    COLON  shift, and go to state 5

    $default  reduce using rule 5 (opt_type)

    opt_type  go to state 6


state 2

    0 $accept: starting . $end

    $end  shift, and go to state 7


state 3

    1 starting: dec_list . EOF

    EOF  shift, and go to state 8


state 4

    2 dec_list: declaration .
    3         | declaration . dec_list

    ID  shift, and go to state 1

    $default  reduce using rule 2 (dec_list)

    dec_list     go to state 9
    declaration  go to state 4


state 5

    6 opt_type: COLON . type

    INTEGER   shift, and go to state 10
    COMPLEX   shift, and go to state 11
    RATIONAL  shift, and go to state 12
    REAL      shift, and go to state 13
    STRING    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    FUNC      shift, and go to state 16
    LROUND    shift, and go to state 17
    LSQUARE   shift, and go to state 18
    LCURLY    shift, and go to state 19

    type        go to state 20
    func_type   go to state 21
    array_type  go to state 22
    tuple_type  go to state 23
    map_type    go to state 24


state 6

    4 declaration: ID opt_type . IS expr SEMICOLON

    IS  shift, and go to state 25


state 7

    0 $accept: starting $end .

    $default  accept


state 8

    1 starting: dec_list EOF .

    $default  reduce using rule 1 (starting)


state 9

    3 dec_list: declaration dec_list .

    $default  reduce using rule 3 (dec_list)


state 10

    7 type: INTEGER .

    $default  reduce using rule 7 (type)


state 11

    8 type: COMPLEX .

    $default  reduce using rule 8 (type)


state 12

    9 type: RATIONAL .

    $default  reduce using rule 9 (type)


state 13

   10 type: REAL .

    $default  reduce using rule 10 (type)


state 14

   11 type: STRING .

    $default  reduce using rule 11 (type)


state 15

   12 type: BOOLEAN .

    $default  reduce using rule 12 (type)


state 16

  102 func_type: FUNC . LROUND type_list RROUND COLON type

    LROUND  shift, and go to state 26


state 17

  106 tuple_type: LROUND . type_list RROUND

    INTEGER   shift, and go to state 10
    COMPLEX   shift, and go to state 11
    RATIONAL  shift, and go to state 12
    REAL      shift, and go to state 13
    STRING    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    FUNC      shift, and go to state 16
    LROUND    shift, and go to state 17
    LSQUARE   shift, and go to state 18
    LCURLY    shift, and go to state 19

    type        go to state 27
    func_type   go to state 21
    type_list   go to state 28
    array_type  go to state 22
    tuple_type  go to state 23
    map_type    go to state 24


state 18

  105 array_type: LSQUARE . type RSQUARE

    INTEGER   shift, and go to state 10
    COMPLEX   shift, and go to state 11
    RATIONAL  shift, and go to state 12
    REAL      shift, and go to state 13
    STRING    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    FUNC      shift, and go to state 16
    LROUND    shift, and go to state 17
    LSQUARE   shift, and go to state 18
    LCURLY    shift, and go to state 19

    type        go to state 29
    func_type   go to state 21
    array_type  go to state 22
    tuple_type  go to state 23
    map_type    go to state 24


state 19

  107 map_type: LCURLY . type COLON type RCURLY

    INTEGER   shift, and go to state 10
    COMPLEX   shift, and go to state 11
    RATIONAL  shift, and go to state 12
    REAL      shift, and go to state 13
    STRING    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    FUNC      shift, and go to state 16
    LROUND    shift, and go to state 17
    LSQUARE   shift, and go to state 18
    LCURLY    shift, and go to state 19

    type        go to state 30
    func_type   go to state 21
    array_type  go to state 22
    tuple_type  go to state 23
    map_type    go to state 24


state 20

    6 opt_type: COLON type .

    $default  reduce using rule 6 (opt_type)


state 21

   13 type: func_type .

    $default  reduce using rule 13 (type)


state 22

   15 type: array_type .

    $default  reduce using rule 15 (type)


state 23

   14 type: tuple_type .

    $default  reduce using rule 14 (type)


state 24

   16 type: map_type .

    $default  reduce using rule 16 (type)


state 25

    4 declaration: ID opt_type IS . expr SEMICOLON

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 44
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 26

  102 func_type: FUNC LROUND . type_list RROUND COLON type

    INTEGER   shift, and go to state 10
    COMPLEX   shift, and go to state 11
    RATIONAL  shift, and go to state 12
    REAL      shift, and go to state 13
    STRING    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    FUNC      shift, and go to state 16
    LROUND    shift, and go to state 17
    LSQUARE   shift, and go to state 18
    LCURLY    shift, and go to state 19

    type        go to state 27
    func_type   go to state 21
    type_list   go to state 54
    array_type  go to state 22
    tuple_type  go to state 23
    map_type    go to state 24


state 27

  103 type_list: type .

    $default  reduce using rule 103 (type_list)


state 28

  104 type_list: type_list . COMMA type
  106 tuple_type: LROUND type_list . RROUND

    COMMA   shift, and go to state 55
    RROUND  shift, and go to state 56


state 29

  105 array_type: LSQUARE type . RSQUARE

    RSQUARE  shift, and go to state 57


state 30

  107 map_type: LCURLY type . COLON type RCURLY

    COLON  shift, and go to state 58


state 31

   49 value: ID .

    $default  reduce using rule 49 (value)


state 32

   43 value: BOOLEAN_VALUE .

    $default  reduce using rule 43 (value)


state 33

   44 value: INTEGER_VALUE .

    $default  reduce using rule 44 (value)


state 34

   45 value: REAL_VALUE .

    $default  reduce using rule 45 (value)


state 35

   46 value: RATIONAL_VALUE .

    $default  reduce using rule 46 (value)


state 36

   47 value: COMPLEX_VALUE .

    $default  reduce using rule 47 (value)


state 37

   48 value: STRING_VALUE .

    $default  reduce using rule 48 (value)


state 38

   31 expr: MINUS . secondary NEG

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    secondary  go to state 59
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 39

   51 func_def: FUNC . LROUND opt_params RROUND opt_type func_body

    LROUND  shift, and go to state 60


state 40

   50 cond: IF . expr THEN expr ELSE expr END

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 61
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 41

   42 primary: LROUND . expr RROUND
   94 tuple_def: LROUND . tuple_elist RROUND

    ID              shift, and go to state 62
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr         go to state 63
    secondary    go to state 45
    primary      go to state 46
    value        go to state 47
    cond         go to state 48
    func_def     go to state 49
    func_call    go to state 50
    array_def    go to state 51
    map_def      go to state 52
    tuple_def    go to state 53
    tuple_elist  go to state 64
    tuple_elem   go to state 65


state 42

   88 array_def: LSQUARE . opt_exprs RSQUARE

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 71 (opt_exprs)

    expr       go to state 66
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    opt_exprs  go to state 67
    expr_list  go to state 68
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 43

   89 map_def: LCURLY . pair_list RCURLY

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 90 (pair_list)

    expr       go to state 69
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    pair_list  go to state 70
    pair       go to state 71
    tuple_def  go to state 53


state 44

    4 declaration: ID opt_type IS expr . SEMICOLON

    SEMICOLON  shift, and go to state 72


state 45

   17 expr: secondary .
   18     | secondary . LESS expr
   19     | secondary . LESSEQUAL expr
   20     | secondary . GREATER expr
   21     | secondary . GREATEREQUAL expr
   22     | secondary . EQUAL expr
   23     | secondary . NOTEQUAL expr
   24     | secondary . AND expr
   25     | secondary . OR expr
   26     | secondary . XOR expr
   27     | secondary . PLUS expr
   28     | secondary . MINUS expr
   29     | secondary . STAR expr
   30     | secondary . SLASH expr
   32     | secondary . ELLIPSIS secondary
   35 secondary: secondary . indexer
   70 func_call: secondary . LROUND opt_exprs RROUND

    DOT           shift, and go to state 73
    STAR          shift, and go to state 74
    SLASH         shift, and go to state 75
    PLUS          shift, and go to state 76
    MINUS         shift, and go to state 77
    LESS          shift, and go to state 78
    LESSEQUAL     shift, and go to state 79
    GREATER       shift, and go to state 80
    GREATEREQUAL  shift, and go to state 81
    EQUAL         shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    AND           shift, and go to state 84
    OR            shift, and go to state 85
    XOR           shift, and go to state 86
    LROUND        shift, and go to state 87
    LSQUARE       shift, and go to state 88
    ELLIPSIS      shift, and go to state 89

    DOT           [reduce using rule 17 (expr)]
    STAR          [reduce using rule 17 (expr)]
    SLASH         [reduce using rule 17 (expr)]
    PLUS          [reduce using rule 17 (expr)]
    MINUS         [reduce using rule 17 (expr)]
    LESS          [reduce using rule 17 (expr)]
    LESSEQUAL     [reduce using rule 17 (expr)]
    GREATER       [reduce using rule 17 (expr)]
    GREATEREQUAL  [reduce using rule 17 (expr)]
    EQUAL         [reduce using rule 17 (expr)]
    NOTEQUAL      [reduce using rule 17 (expr)]
    AND           [reduce using rule 17 (expr)]
    OR            [reduce using rule 17 (expr)]
    XOR           [reduce using rule 17 (expr)]
    LROUND        [reduce using rule 17 (expr)]
    LSQUARE       [reduce using rule 17 (expr)]
    ELLIPSIS      [reduce using rule 17 (expr)]
    $default      reduce using rule 17 (expr)

    indexer  go to state 90


state 46

   33 secondary: primary .

    $default  reduce using rule 33 (secondary)


state 47

   36 primary: value .

    $default  reduce using rule 36 (primary)


state 48

   37 primary: cond .

    $default  reduce using rule 37 (primary)


state 49

   38 primary: func_def .

    $default  reduce using rule 38 (primary)


state 50

   34 secondary: func_call .

    $default  reduce using rule 34 (secondary)


state 51

   39 primary: array_def .

    $default  reduce using rule 39 (primary)


state 52

   40 primary: map_def .

    $default  reduce using rule 40 (primary)


state 53

   41 primary: tuple_def .

    $default  reduce using rule 41 (primary)


state 54

  102 func_type: FUNC LROUND type_list . RROUND COLON type
  104 type_list: type_list . COMMA type

    COMMA   shift, and go to state 55
    RROUND  shift, and go to state 91


state 55

  104 type_list: type_list COMMA . type

    INTEGER   shift, and go to state 10
    COMPLEX   shift, and go to state 11
    RATIONAL  shift, and go to state 12
    REAL      shift, and go to state 13
    STRING    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    FUNC      shift, and go to state 16
    LROUND    shift, and go to state 17
    LSQUARE   shift, and go to state 18
    LCURLY    shift, and go to state 19

    type        go to state 92
    func_type   go to state 21
    array_type  go to state 22
    tuple_type  go to state 23
    map_type    go to state 24


state 56

  106 tuple_type: LROUND type_list RROUND .

    $default  reduce using rule 106 (tuple_type)


state 57

  105 array_type: LSQUARE type RSQUARE .

    $default  reduce using rule 105 (array_type)


state 58

  107 map_type: LCURLY type COLON . type RCURLY

    INTEGER   shift, and go to state 10
    COMPLEX   shift, and go to state 11
    RATIONAL  shift, and go to state 12
    REAL      shift, and go to state 13
    STRING    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    FUNC      shift, and go to state 16
    LROUND    shift, and go to state 17
    LSQUARE   shift, and go to state 18
    LCURLY    shift, and go to state 19

    type        go to state 93
    func_type   go to state 21
    array_type  go to state 22
    tuple_type  go to state 23
    map_type    go to state 24


state 59

   31 expr: MINUS secondary . NEG
   35 secondary: secondary . indexer
   70 func_call: secondary . LROUND opt_exprs RROUND

    DOT      shift, and go to state 73
    LROUND   shift, and go to state 87
    LSQUARE  shift, and go to state 88
    NEG      shift, and go to state 94

    indexer  go to state 90


state 60

   51 func_def: FUNC LROUND . opt_params RROUND opt_type func_body

    ID  shift, and go to state 95

    $default  reduce using rule 52 (opt_params)

    opt_params  go to state 96
    param_list  go to state 97
    param       go to state 98


state 61

   50 cond: IF expr . THEN expr ELSE expr END

    THEN  shift, and go to state 99


state 62

   49 value: ID .
   97 tuple_elem: ID . IS expr

    IS  shift, and go to state 100

    $default  reduce using rule 49 (value)


state 63

   42 primary: LROUND expr . RROUND
   98 tuple_elem: expr .

    RROUND  shift, and go to state 101

    RROUND    [reduce using rule 98 (tuple_elem)]
    $default  reduce using rule 98 (tuple_elem)


state 64

   94 tuple_def: LROUND tuple_elist . RROUND
   96 tuple_elist: tuple_elist . COMMA tuple_elem

    COMMA   shift, and go to state 102
    RROUND  shift, and go to state 103


state 65

   95 tuple_elist: tuple_elem .

    $default  reduce using rule 95 (tuple_elist)


state 66

   73 expr_list: expr .

    $default  reduce using rule 73 (expr_list)


state 67

   88 array_def: LSQUARE opt_exprs . RSQUARE

    RSQUARE  shift, and go to state 104


state 68

   72 opt_exprs: expr_list .
   74 expr_list: expr_list . COMMA expr

    COMMA  shift, and go to state 105

    $default  reduce using rule 72 (opt_exprs)


state 69

   93 pair: expr . COLON expr

    COLON  shift, and go to state 106


state 70

   89 map_def: LCURLY pair_list . RCURLY
   92 pair_list: pair_list . COMMA pair

    COMMA   shift, and go to state 107
    RCURLY  shift, and go to state 108


state 71

   91 pair_list: pair .

    $default  reduce using rule 91 (pair_list)


state 72

    4 declaration: ID opt_type IS expr SEMICOLON .

    $default  reduce using rule 4 (declaration)


state 73

  100 indexer: DOT . ID
  101        | DOT . INTEGER_VALUE

    ID             shift, and go to state 109
    INTEGER_VALUE  shift, and go to state 110


state 74

   29 expr: secondary STAR . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 111
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 75

   30 expr: secondary SLASH . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 112
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 76

   27 expr: secondary PLUS . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 113
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 77

   28 expr: secondary MINUS . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 114
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 78

   18 expr: secondary LESS . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 115
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 79

   19 expr: secondary LESSEQUAL . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 116
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 80

   20 expr: secondary GREATER . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 117
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 81

   21 expr: secondary GREATEREQUAL . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 118
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 82

   22 expr: secondary EQUAL . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 119
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 83

   23 expr: secondary NOTEQUAL . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 120
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 84

   24 expr: secondary AND . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 121
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 85

   25 expr: secondary OR . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 122
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 86

   26 expr: secondary XOR . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 123
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 87

   70 func_call: secondary LROUND . opt_exprs RROUND

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 71 (opt_exprs)

    expr       go to state 66
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    opt_exprs  go to state 124
    expr_list  go to state 68
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 88

   99 indexer: LSQUARE . expr RSQUARE

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 125
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 89

   32 expr: secondary ELLIPSIS . secondary

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    secondary  go to state 126
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 90

   35 secondary: secondary indexer .

    $default  reduce using rule 35 (secondary)


state 91

  102 func_type: FUNC LROUND type_list RROUND . COLON type

    COLON  shift, and go to state 127


state 92

  104 type_list: type_list COMMA type .

    $default  reduce using rule 104 (type_list)


state 93

  107 map_type: LCURLY type COLON type . RCURLY

    RCURLY  shift, and go to state 128


state 94

   31 expr: MINUS secondary NEG .

    $default  reduce using rule 31 (expr)


state 95

   56 param: ID . COLON type

    COLON  shift, and go to state 129


state 96

   51 func_def: FUNC LROUND opt_params . RROUND opt_type func_body

    RROUND  shift, and go to state 130


state 97

   53 opt_params: param_list .
   55 param_list: param_list . COMMA param

    COMMA  shift, and go to state 131

    $default  reduce using rule 53 (opt_params)


state 98

   54 param_list: param .

    $default  reduce using rule 54 (param_list)


state 99

   50 cond: IF expr THEN . expr ELSE expr END

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 132
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 100

   97 tuple_elem: ID IS . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 133
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 101

   42 primary: LROUND expr RROUND .

    $default  reduce using rule 42 (primary)


state 102

   96 tuple_elist: tuple_elist COMMA . tuple_elem

    ID              shift, and go to state 62
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr        go to state 134
    secondary   go to state 45
    primary     go to state 46
    value       go to state 47
    cond        go to state 48
    func_def    go to state 49
    func_call   go to state 50
    array_def   go to state 51
    map_def     go to state 52
    tuple_def   go to state 53
    tuple_elem  go to state 135


state 103

   94 tuple_def: LROUND tuple_elist RROUND .

    $default  reduce using rule 94 (tuple_def)


state 104

   88 array_def: LSQUARE opt_exprs RSQUARE .

    $default  reduce using rule 88 (array_def)


state 105

   74 expr_list: expr_list COMMA . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 136
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 106

   93 pair: expr COLON . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 137
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 107

   92 pair_list: pair_list COMMA . pair

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 69
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    pair       go to state 138
    tuple_def  go to state 53


state 108

   89 map_def: LCURLY pair_list RCURLY .

    $default  reduce using rule 89 (map_def)


state 109

  100 indexer: DOT ID .

    $default  reduce using rule 100 (indexer)


state 110

  101 indexer: DOT INTEGER_VALUE .

    $default  reduce using rule 101 (indexer)


state 111

   29 expr: secondary STAR expr .

    $default  reduce using rule 29 (expr)


state 112

   30 expr: secondary SLASH expr .

    $default  reduce using rule 30 (expr)


state 113

   27 expr: secondary PLUS expr .

    $default  reduce using rule 27 (expr)


state 114

   28 expr: secondary MINUS expr .

    $default  reduce using rule 28 (expr)


state 115

   18 expr: secondary LESS expr .

    $default  reduce using rule 18 (expr)


state 116

   19 expr: secondary LESSEQUAL expr .

    $default  reduce using rule 19 (expr)


state 117

   20 expr: secondary GREATER expr .

    $default  reduce using rule 20 (expr)


state 118

   21 expr: secondary GREATEREQUAL expr .

    $default  reduce using rule 21 (expr)


state 119

   22 expr: secondary EQUAL expr .

    $default  reduce using rule 22 (expr)


state 120

   23 expr: secondary NOTEQUAL expr .

    $default  reduce using rule 23 (expr)


state 121

   24 expr: secondary AND expr .

    $default  reduce using rule 24 (expr)


state 122

   25 expr: secondary OR expr .

    $default  reduce using rule 25 (expr)


state 123

   26 expr: secondary XOR expr .

    $default  reduce using rule 26 (expr)


state 124

   70 func_call: secondary LROUND opt_exprs . RROUND

    RROUND  shift, and go to state 139


state 125

   99 indexer: LSQUARE expr . RSQUARE

    RSQUARE  shift, and go to state 140


state 126

   32 expr: secondary ELLIPSIS secondary .
   35 secondary: secondary . indexer
   70 func_call: secondary . LROUND opt_exprs RROUND

    DOT      shift, and go to state 73
    LROUND   shift, and go to state 87
    LSQUARE  shift, and go to state 88

    DOT       [reduce using rule 32 (expr)]
    LROUND    [reduce using rule 32 (expr)]
    LSQUARE   [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)

    indexer  go to state 90


state 127

  102 func_type: FUNC LROUND type_list RROUND COLON . type

    INTEGER   shift, and go to state 10
    COMPLEX   shift, and go to state 11
    RATIONAL  shift, and go to state 12
    REAL      shift, and go to state 13
    STRING    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    FUNC      shift, and go to state 16
    LROUND    shift, and go to state 17
    LSQUARE   shift, and go to state 18
    LCURLY    shift, and go to state 19

    type        go to state 141
    func_type   go to state 21
    array_type  go to state 22
    tuple_type  go to state 23
    map_type    go to state 24


state 128

  107 map_type: LCURLY type COLON type RCURLY .

    $default  reduce using rule 107 (map_type)


state 129

   56 param: ID COLON . type

    INTEGER   shift, and go to state 10
    COMPLEX   shift, and go to state 11
    RATIONAL  shift, and go to state 12
    REAL      shift, and go to state 13
    STRING    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    FUNC      shift, and go to state 16
    LROUND    shift, and go to state 17
    LSQUARE   shift, and go to state 18
    LCURLY    shift, and go to state 19

    type        go to state 142
    func_type   go to state 21
    array_type  go to state 22
    tuple_type  go to state 23
    map_type    go to state 24


state 130

   51 func_def: FUNC LROUND opt_params RROUND . opt_type func_body

    COLON  shift, and go to state 5

    $default  reduce using rule 5 (opt_type)

    opt_type  go to state 143


state 131

   55 param_list: param_list COMMA . param

    ID  shift, and go to state 95

    param  go to state 144


state 132

   50 cond: IF expr THEN expr . ELSE expr END

    ELSE  shift, and go to state 145


state 133

   97 tuple_elem: ID IS expr .

    $default  reduce using rule 97 (tuple_elem)


state 134

   98 tuple_elem: expr .

    $default  reduce using rule 98 (tuple_elem)


state 135

   96 tuple_elist: tuple_elist COMMA tuple_elem .

    $default  reduce using rule 96 (tuple_elist)


state 136

   74 expr_list: expr_list COMMA expr .

    $default  reduce using rule 74 (expr_list)


state 137

   93 pair: expr COLON expr .

    $default  reduce using rule 93 (pair)


state 138

   92 pair_list: pair_list COMMA pair .

    $default  reduce using rule 92 (pair_list)


state 139

   70 func_call: secondary LROUND opt_exprs RROUND .

    $default  reduce using rule 70 (func_call)


state 140

   99 indexer: LSQUARE expr RSQUARE .

    $default  reduce using rule 99 (indexer)


state 141

  102 func_type: FUNC LROUND type_list RROUND COLON type .

    $default  reduce using rule 102 (func_type)


state 142

   56 param: ID COLON type .

    $default  reduce using rule 56 (param)


state 143

   51 func_def: FUNC LROUND opt_params RROUND opt_type . func_body

    ARROW  shift, and go to state 146
    DO     shift, and go to state 147

    func_body  go to state 148


state 144

   55 param_list: param_list COMMA param .

    $default  reduce using rule 55 (param_list)


state 145

   50 cond: IF expr THEN expr ELSE . expr END

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 149
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 146

   58 func_body: ARROW . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 150
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 147

   57 func_body: DO . stm_list END

    ID              shift, and go to state 151
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    FUNC            shift, and go to state 39
    RETURN          shift, and go to state 152
    PRINT           shift, and go to state 153
    IF              shift, and go to state 154
    WHILE           shift, and go to state 155
    FOR             shift, and go to state 156
    BREAK           shift, and go to state 157
    CONTINUE        shift, and go to state 158
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 79 (loop_header)

    declaration  go to state 159
    secondary    go to state 160
    primary      go to state 46
    value        go to state 47
    cond         go to state 48
    func_def     go to state 49
    stm_list     go to state 161
    statement    go to state 162
    func_call    go to state 163
    assignment   go to state 164
    if_stm       go to state 165
    loop_stm     go to state 166
    loop_header  go to state 167
    return_stm   go to state 168
    break_stm    go to state 169
    cont_stm     go to state 170
    print_stm    go to state 171
    array_def    go to state 51
    map_def      go to state 52
    tuple_def    go to state 53


state 148

   51 func_def: FUNC LROUND opt_params RROUND opt_type func_body .

    $default  reduce using rule 51 (func_def)


state 149

   50 cond: IF expr THEN expr ELSE expr . END

    END  shift, and go to state 172


state 150

   58 func_body: ARROW expr .

    $default  reduce using rule 58 (func_body)


state 151

    4 declaration: ID . opt_type IS expr SEMICOLON
   49 value: ID .

    COLON  shift, and go to state 5

    IS        reduce using rule 5 (opt_type)
    $default  reduce using rule 49 (value)

    opt_type  go to state 6


state 152

   83 return_stm: RETURN . SEMICOLON
   84           | RETURN . expr SEMICOLON

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    SEMICOLON       shift, and go to state 173
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 174
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 153

   87 print_stm: PRINT . LROUND opt_exprs RROUND SEMICOLON

    LROUND  shift, and go to state 175


state 154

   50 cond: IF . expr THEN expr ELSE expr END
   76 if_stm: IF . expr THEN stm_list END
   77       | IF . expr THEN stm_list ELSE stm_list END

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 176
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 155

   82 loop_header: WHILE . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 177
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 156

   80 loop_header: FOR . ID IN expr
   81            | FOR . expr

    ID              shift, and go to state 178
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 179
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 157

   85 break_stm: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 180


state 158

   86 cont_stm: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 181


state 159

   63 statement: declaration .

    $default  reduce using rule 63 (statement)


state 160

   35 secondary: secondary . indexer
   70 func_call: secondary . LROUND opt_exprs RROUND
   75 assignment: secondary . ASSIGN expr SEMICOLON

    DOT      shift, and go to state 73
    ASSIGN   shift, and go to state 182
    LROUND   shift, and go to state 87
    LSQUARE  shift, and go to state 88

    indexer  go to state 90


state 161

   57 func_body: DO stm_list . END
   60 stm_list: stm_list . statement

    ID              shift, and go to state 151
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    FUNC            shift, and go to state 39
    RETURN          shift, and go to state 152
    PRINT           shift, and go to state 153
    IF              shift, and go to state 154
    END             shift, and go to state 183
    WHILE           shift, and go to state 155
    FOR             shift, and go to state 156
    BREAK           shift, and go to state 157
    CONTINUE        shift, and go to state 158
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 79 (loop_header)

    declaration  go to state 159
    secondary    go to state 160
    primary      go to state 46
    value        go to state 47
    cond         go to state 48
    func_def     go to state 49
    statement    go to state 184
    func_call    go to state 163
    assignment   go to state 164
    if_stm       go to state 165
    loop_stm     go to state 166
    loop_header  go to state 167
    return_stm   go to state 168
    break_stm    go to state 169
    cont_stm     go to state 170
    print_stm    go to state 171
    array_def    go to state 51
    map_def      go to state 52
    tuple_def    go to state 53


state 162

   59 stm_list: statement .

    $default  reduce using rule 59 (stm_list)


state 163

   34 secondary: func_call .
   61 statement: func_call . SEMICOLON

    SEMICOLON  shift, and go to state 185

    $default  reduce using rule 34 (secondary)


state 164

   62 statement: assignment .

    $default  reduce using rule 62 (statement)


state 165

   64 statement: if_stm .

    $default  reduce using rule 64 (statement)


state 166

   65 statement: loop_stm .

    $default  reduce using rule 65 (statement)


state 167

   78 loop_stm: loop_header . LOOP stm_list END

    LOOP  shift, and go to state 186


state 168

   66 statement: return_stm .

    $default  reduce using rule 66 (statement)


state 169

   67 statement: break_stm .

    $default  reduce using rule 67 (statement)


state 170

   68 statement: cont_stm .

    $default  reduce using rule 68 (statement)


state 171

   69 statement: print_stm .

    $default  reduce using rule 69 (statement)


state 172

   50 cond: IF expr THEN expr ELSE expr END .

    $default  reduce using rule 50 (cond)


state 173

   83 return_stm: RETURN SEMICOLON .

    $default  reduce using rule 83 (return_stm)


state 174

   84 return_stm: RETURN expr . SEMICOLON

    SEMICOLON  shift, and go to state 187


state 175

   87 print_stm: PRINT LROUND . opt_exprs RROUND SEMICOLON

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 71 (opt_exprs)

    expr       go to state 66
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    opt_exprs  go to state 188
    expr_list  go to state 68
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 176

   50 cond: IF expr . THEN expr ELSE expr END
   76 if_stm: IF expr . THEN stm_list END
   77       | IF expr . THEN stm_list ELSE stm_list END

    THEN  shift, and go to state 189


state 177

   82 loop_header: WHILE expr .

    $default  reduce using rule 82 (loop_header)


state 178

   49 value: ID .
   80 loop_header: FOR ID . IN expr

    IN  shift, and go to state 190

    $default  reduce using rule 49 (value)


state 179

   81 loop_header: FOR expr .

    $default  reduce using rule 81 (loop_header)


state 180

   85 break_stm: BREAK SEMICOLON .

    $default  reduce using rule 85 (break_stm)


state 181

   86 cont_stm: CONTINUE SEMICOLON .

    $default  reduce using rule 86 (cont_stm)


state 182

   75 assignment: secondary ASSIGN . expr SEMICOLON

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 191
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 183

   57 func_body: DO stm_list END .

    $default  reduce using rule 57 (func_body)


state 184

   60 stm_list: stm_list statement .

    $default  reduce using rule 60 (stm_list)


state 185

   61 statement: func_call SEMICOLON .

    $default  reduce using rule 61 (statement)


state 186

   78 loop_stm: loop_header LOOP . stm_list END

    ID              shift, and go to state 151
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    FUNC            shift, and go to state 39
    RETURN          shift, and go to state 152
    PRINT           shift, and go to state 153
    IF              shift, and go to state 154
    WHILE           shift, and go to state 155
    FOR             shift, and go to state 156
    BREAK           shift, and go to state 157
    CONTINUE        shift, and go to state 158
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 79 (loop_header)

    declaration  go to state 159
    secondary    go to state 160
    primary      go to state 46
    value        go to state 47
    cond         go to state 48
    func_def     go to state 49
    stm_list     go to state 192
    statement    go to state 162
    func_call    go to state 163
    assignment   go to state 164
    if_stm       go to state 165
    loop_stm     go to state 166
    loop_header  go to state 167
    return_stm   go to state 168
    break_stm    go to state 169
    cont_stm     go to state 170
    print_stm    go to state 171
    array_def    go to state 51
    map_def      go to state 52
    tuple_def    go to state 53


state 187

   84 return_stm: RETURN expr SEMICOLON .

    $default  reduce using rule 84 (return_stm)


state 188

   87 print_stm: PRINT LROUND opt_exprs . RROUND SEMICOLON

    RROUND  shift, and go to state 193


state 189

   50 cond: IF expr THEN . expr ELSE expr END
   76 if_stm: IF expr THEN . stm_list END
   77       | IF expr THEN . stm_list ELSE stm_list END

    ID              shift, and go to state 151
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    RETURN          shift, and go to state 152
    PRINT           shift, and go to state 153
    IF              shift, and go to state 154
    WHILE           shift, and go to state 155
    FOR             shift, and go to state 156
    BREAK           shift, and go to state 157
    CONTINUE        shift, and go to state 158
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 79 (loop_header)

    declaration  go to state 159
    expr         go to state 132
    secondary    go to state 194
    primary      go to state 46
    value        go to state 47
    cond         go to state 48
    func_def     go to state 49
    stm_list     go to state 195
    statement    go to state 162
    func_call    go to state 163
    assignment   go to state 164
    if_stm       go to state 165
    loop_stm     go to state 166
    loop_header  go to state 167
    return_stm   go to state 168
    break_stm    go to state 169
    cont_stm     go to state 170
    print_stm    go to state 171
    array_def    go to state 51
    map_def      go to state 52
    tuple_def    go to state 53


state 190

   80 loop_header: FOR ID IN . expr

    ID              shift, and go to state 31
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    MINUS           shift, and go to state 38
    FUNC            shift, and go to state 39
    IF              shift, and go to state 40
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    expr       go to state 196
    secondary  go to state 45
    primary    go to state 46
    value      go to state 47
    cond       go to state 48
    func_def   go to state 49
    func_call  go to state 50
    array_def  go to state 51
    map_def    go to state 52
    tuple_def  go to state 53


state 191

   75 assignment: secondary ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 197


state 192

   60 stm_list: stm_list . statement
   78 loop_stm: loop_header LOOP stm_list . END

    ID              shift, and go to state 151
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    FUNC            shift, and go to state 39
    RETURN          shift, and go to state 152
    PRINT           shift, and go to state 153
    IF              shift, and go to state 154
    END             shift, and go to state 198
    WHILE           shift, and go to state 155
    FOR             shift, and go to state 156
    BREAK           shift, and go to state 157
    CONTINUE        shift, and go to state 158
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 79 (loop_header)

    declaration  go to state 159
    secondary    go to state 160
    primary      go to state 46
    value        go to state 47
    cond         go to state 48
    func_def     go to state 49
    statement    go to state 184
    func_call    go to state 163
    assignment   go to state 164
    if_stm       go to state 165
    loop_stm     go to state 166
    loop_header  go to state 167
    return_stm   go to state 168
    break_stm    go to state 169
    cont_stm     go to state 170
    print_stm    go to state 171
    array_def    go to state 51
    map_def      go to state 52
    tuple_def    go to state 53


state 193

   87 print_stm: PRINT LROUND opt_exprs RROUND . SEMICOLON

    SEMICOLON  shift, and go to state 199


state 194

   17 expr: secondary .
   18     | secondary . LESS expr
   19     | secondary . LESSEQUAL expr
   20     | secondary . GREATER expr
   21     | secondary . GREATEREQUAL expr
   22     | secondary . EQUAL expr
   23     | secondary . NOTEQUAL expr
   24     | secondary . AND expr
   25     | secondary . OR expr
   26     | secondary . XOR expr
   27     | secondary . PLUS expr
   28     | secondary . MINUS expr
   29     | secondary . STAR expr
   30     | secondary . SLASH expr
   32     | secondary . ELLIPSIS secondary
   35 secondary: secondary . indexer
   70 func_call: secondary . LROUND opt_exprs RROUND
   75 assignment: secondary . ASSIGN expr SEMICOLON

    DOT           shift, and go to state 73
    STAR          shift, and go to state 74
    SLASH         shift, and go to state 75
    PLUS          shift, and go to state 76
    MINUS         shift, and go to state 77
    ASSIGN        shift, and go to state 182
    LESS          shift, and go to state 78
    LESSEQUAL     shift, and go to state 79
    GREATER       shift, and go to state 80
    GREATEREQUAL  shift, and go to state 81
    EQUAL         shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    AND           shift, and go to state 84
    OR            shift, and go to state 85
    XOR           shift, and go to state 86
    LROUND        shift, and go to state 87
    LSQUARE       shift, and go to state 88
    ELLIPSIS      shift, and go to state 89

    $default  reduce using rule 17 (expr)

    indexer  go to state 90


state 195

   60 stm_list: stm_list . statement
   76 if_stm: IF expr THEN stm_list . END
   77       | IF expr THEN stm_list . ELSE stm_list END

    ID              shift, and go to state 151
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    FUNC            shift, and go to state 39
    RETURN          shift, and go to state 152
    PRINT           shift, and go to state 153
    IF              shift, and go to state 154
    ELSE            shift, and go to state 200
    END             shift, and go to state 201
    WHILE           shift, and go to state 155
    FOR             shift, and go to state 156
    BREAK           shift, and go to state 157
    CONTINUE        shift, and go to state 158
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 79 (loop_header)

    declaration  go to state 159
    secondary    go to state 160
    primary      go to state 46
    value        go to state 47
    cond         go to state 48
    func_def     go to state 49
    statement    go to state 184
    func_call    go to state 163
    assignment   go to state 164
    if_stm       go to state 165
    loop_stm     go to state 166
    loop_header  go to state 167
    return_stm   go to state 168
    break_stm    go to state 169
    cont_stm     go to state 170
    print_stm    go to state 171
    array_def    go to state 51
    map_def      go to state 52
    tuple_def    go to state 53


state 196

   80 loop_header: FOR ID IN expr .

    $default  reduce using rule 80 (loop_header)


state 197

   75 assignment: secondary ASSIGN expr SEMICOLON .

    $default  reduce using rule 75 (assignment)


state 198

   78 loop_stm: loop_header LOOP stm_list END .

    $default  reduce using rule 78 (loop_stm)


state 199

   87 print_stm: PRINT LROUND opt_exprs RROUND SEMICOLON .

    $default  reduce using rule 87 (print_stm)


state 200

   77 if_stm: IF expr THEN stm_list ELSE . stm_list END

    ID              shift, and go to state 151
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    FUNC            shift, and go to state 39
    RETURN          shift, and go to state 152
    PRINT           shift, and go to state 153
    IF              shift, and go to state 154
    WHILE           shift, and go to state 155
    FOR             shift, and go to state 156
    BREAK           shift, and go to state 157
    CONTINUE        shift, and go to state 158
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 79 (loop_header)

    declaration  go to state 159
    secondary    go to state 160
    primary      go to state 46
    value        go to state 47
    cond         go to state 48
    func_def     go to state 49
    stm_list     go to state 202
    statement    go to state 162
    func_call    go to state 163
    assignment   go to state 164
    if_stm       go to state 165
    loop_stm     go to state 166
    loop_header  go to state 167
    return_stm   go to state 168
    break_stm    go to state 169
    cont_stm     go to state 170
    print_stm    go to state 171
    array_def    go to state 51
    map_def      go to state 52
    tuple_def    go to state 53


state 201

   76 if_stm: IF expr THEN stm_list END .

    $default  reduce using rule 76 (if_stm)


state 202

   60 stm_list: stm_list . statement
   77 if_stm: IF expr THEN stm_list ELSE stm_list . END

    ID              shift, and go to state 151
    BOOLEAN_VALUE   shift, and go to state 32
    INTEGER_VALUE   shift, and go to state 33
    REAL_VALUE      shift, and go to state 34
    RATIONAL_VALUE  shift, and go to state 35
    COMPLEX_VALUE   shift, and go to state 36
    STRING_VALUE    shift, and go to state 37
    FUNC            shift, and go to state 39
    RETURN          shift, and go to state 152
    PRINT           shift, and go to state 153
    IF              shift, and go to state 154
    END             shift, and go to state 203
    WHILE           shift, and go to state 155
    FOR             shift, and go to state 156
    BREAK           shift, and go to state 157
    CONTINUE        shift, and go to state 158
    LROUND          shift, and go to state 41
    LSQUARE         shift, and go to state 42
    LCURLY          shift, and go to state 43

    $default  reduce using rule 79 (loop_header)

    declaration  go to state 159
    secondary    go to state 160
    primary      go to state 46
    value        go to state 47
    cond         go to state 48
    func_def     go to state 49
    statement    go to state 184
    func_call    go to state 163
    assignment   go to state 164
    if_stm       go to state 165
    loop_stm     go to state 166
    loop_header  go to state 167
    return_stm   go to state 168
    break_stm    go to state 169
    cont_stm     go to state 170
    print_stm    go to state 171
    array_def    go to state 51
    map_def      go to state 52
    tuple_def    go to state 53


state 203

   77 if_stm: IF expr THEN stm_list ELSE stm_list END .

    $default  reduce using rule 77 (if_stm)
